% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SPAGxEPlus_functions_MYZ_2024-12-03.R
\name{SPAGxE_Plus}
\alias{SPAGxE_Plus}
\title{A scalable and accurate analytical framework to account for familial relatedness in large-scale genome-wide gene-environment interaction (GxE) analysis.}
\usage{
SPAGxE_Plus(
  Geno.mtx,
  E,
  Phen.mtx,
  Cova.mtx,
  obj.SPAGxE_Plus_Nullmodel,
  epsilon = 0.001,
  Cutoff = 2,
  impute.method = "fixed",
  missing.cutoff = 0.15,
  min.maf = 1e-05,
  G.model = "Add"
)
}
\arguments{
\item{Geno.mtx}{a numeric genotype matrix with each row as an individual and each column as a genetic variant.
Column names of genetic variations and row names of subject IDs are required.
Missing genotypes should be coded as NA. Both hard-called and imputed genotype data are supported.}

\item{E}{a numeric environmental factor with each element as an environmental factor value of an individual.}

\item{Phen.mtx}{phenotype dataframe at least including three columns of ID, surv.time and event for time-to-event trait analysis, two columns of ID and linear phenotype Y for linear trait analysis, two columns of ID and binary phenotype Y for binary trait analysis, or two columns of ID and ordinal categorical phenotype Y for ordinal categorical trait analysis.}

\item{Cova.mtx}{a covariate matrix excluding the environmental factor E.}

\item{obj.SPAGxE_Plus_Nullmodel}{a null model object from SPAGxE_Plus_Nullmodel()}

\item{epsilon}{a numeric value (default: 0.001) to specify the p-value cutoff for betaG estimation. Please see details for more information.}

\item{Cutoff}{a numeric value (Default: 2) to specify the standard deviation cutoff to be used.
If the test statistic lies within the standard deviation cutoff, its p value is calculated based on a normal distribution approximation,
otherwise, its p value is calculated based on a saddlepoint approximation.}

\item{impute.method}{a character string (default: "fixed") to specify the method to impute missing genotypes.
"fixed" imputes missing genotypes (NA) by assigning the mean genotype value.}

\item{missing.cutoff}{a numeric value (default: 0.15) to specify the cutoff of the missing rates.
Any variant with missing rate higher than this cutoff will be excluded from the analysis.}

\item{min.maf}{a numeric value (default: 0.001) to specify the cutoff of the minimal MAF. Any SNP with MAF < cutoff will be excluded from the analysis.}

\item{G.model}{model type}
}
\value{
an R matrix with the following columns
\item{MAF}{Minor allele frequencies calculated with half of mean value of genotypes}
\item{missing.rate}{Missing rates}
\item{p.value.spaGxE.plus}{p value from SPAGxE method}
\item{p.value.spaGxE.plus.Wald}{p value from SPAGxE_Wald method}
\item{p.value.spaGxE.plus.CCT.Wald}{p value (recommanded) from SPAGxE method}
\item{p.value.normGxE.plus}{p value from NormGxE method (based on a normal distribution approximation)}
\item{p.value.betaG}{p value of the marginal genetic effect based on a normal distribution approximation}
\item{Stat.betaG}{score statistics testing for marginal genetic effect}
\item{Var.betaG}{estimated variances of the score statistics testing for marginal genetic effect}
\item{z.betaG}{z values (using Var1) corresponding to the score statistics testing for marginal genetic effect}
}
\description{
A scalable and accurate analytical framework to account for familial relatedness in large-scale genome-wide gene-environmental interaction (GxE) analyses of quantitative, binary, time-to-event, ordinal categorical, and longitudinal traits.
}
\details{
To run SPAGxE_Plus, the following two steps are required:
\itemize{
  \item Step 1: Use function SPAGxE_Plus_Nullmodel() to fit a genotype-independent (covariate-only) model to get residuals under a genotype-independent (covariate-only) model.
  \item Step 2: Use function SPAGxE_Plus() to calculate p value for each genetic variant to conduct a GxE analysis.
}

SPAGxE_Plus() is an extension of SPAGxE() which additionally uses sparse GRM to account for familial relatedness.
SPAGxE_Plus() uses a hybrid strategy with both saddlepoint approximation and normal distribution approximation.
Generally speaking, saddlepoint approximation is more accurate than, but a little slower than, the traditional normal distribution approximation.
Hence, when the score statistic is close to 0 (i.e., p-values are not small), we use the normal distribution approximation.
And when the score statistic is far away from 0 (i.e., p-values are small), we use the saddlepoint approximation.
Argument 'Cutoff' is to specify the standard deviation cutoff.

Sometimes, the order of subjects between phenotype data and genotype data are different, which could lead to some errors.
To avoid that, we ask users to specify the IDs of both phenotype data (pIDs) and genotype data (gIDs) when fitting the null model.
Users are responsible to check the consistency between pIDs and formula, and the consistency between gIDs and Geno.mtx.
}
\examples{
# example 1  binary phenotype
# load in binary phenotype, genotype, and sparseGRM

data("Phen.mtx.SPAGxEPlus.binary")
data("sparseGRM.SPAGxEPlus")
data("GenoMat.SPAGxEPlus")

Phen.mtx = Phen.mtx.SPAGxEPlus.binary

E = Phen.mtx.SPAGxEPlus.binary$E        # environmental factor
Cova.mtx = Phen.mtx.SPAGxEPlus.binary[,c("Cov1","Cov2")] # Covariate matrix excluding environmental factor

### fit null model for SPAGxEPlus

obj.SPAGxE_Plus_Nullmodel = SPAGxE_Plus_Nullmodel(traits = "binary",
                                                 Y~Cov1+Cov2+E,family=binomial(link="logit"),
                                                 data=Phen.mtx.SPAGxEPlus.binary,
                                                 pIDs=Phen.mtx.SPAGxEPlus.binary$IID,
                                                 gIDs=rownames(GenoMat.SPAGxEPlus),
                                                 sparseGRM = sparseGRM.SPAGxEPlus,
                                                 E = E)

### calculate p values

binary.res = SPAGxE_Plus(Geno.mtx = GenoMat.SPAGxEPlus,
                        E = E,
                        Phen.mtx = Phen.mtx.SPAGxEPlus.binary,
                        Cova.mtx = Cova.mtx,
                        obj.SPAGxE_Plus_Nullmodel = obj.SPAGxE_Plus_Nullmodel)

binary.res = as.data.frame(binary.res)

# we recommand using column of 'p.value.spaGxE.plus' as p-values testing for marginal GxE effect
head(binary.res)

}
