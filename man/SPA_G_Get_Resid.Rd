% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SPAGxECCT.R
\name{SPA_G_Get_Resid}
\alias{SPA_G_Get_Resid}
\title{Fits a genotype-independent model}
\usage{
SPA_G_Get_Resid(
  traits = "survival/binary/quantitative",
  formula = NULL,
  data = NULL,
  pIDs = NULL,
  gIDs = NULL,
  range = c(-100, 100),
  length.out = 10000,
  ...
)
}
\arguments{
\item{traits}{a character value corresponding to phenotype. It should be "binary" for binary phenotype, "survival" for time-to-event phenotype, and "others" for other types of phenotype.}

\item{formula}{a formula to be passed to function lm(), glm(), or coxph(). For more details, please refer to package survival.}

\item{data}{a data.frame in which to interpret the variables named in the formula}

\item{pIDs}{a character vector of subject IDs. NOTE: its order should be the same as the subjects order in the formula.}

\item{gIDs}{a character vector of subject IDs. NOTE: its order should be the same as the subjects order of the Geno.mtx (i.e. the input of the function SPAGxE_CCT()).}

\item{range}{a two-element numeric vector (default: c(-100,100)) to specify the domain of the empirical CGF.}

\item{length.out}{a positive integer (default: 9999) for empirical CGF. Larger length.out corresponds to longer calculation time and more accurate estimated empirical CGF.}

\item{...}{Other arguments passed to function glm() or coxph(). For more details, please refer to package survival.}
}
\value{
Residuals after fitting a genotype-independent (covariate-only) model.
}
\description{
Fits a null linear regression model for quantitative traits, a null logistic regression model for binary traits ,or a null Cox proportional hazards model for time-to-event traits and then calculates residuals under a genotype-independent model.
}
\examples{
# example 1  time-to-event phenotype
# Simulation phenotype and genotype
N = 10000
nSNP = 100
MAF = 0.1
Phen.mtx = data.frame(ID = paste0("IID-",1:N),
                      event=rbinom(N,1,0.5),
                      surv.time=runif(N),
                      Cov1=rnorm(N),
                      Cov2=rbinom(N,1,0.5),
                      E = rnorm(N))

Cova.mtx = Phen.mtx[,c("Cov1","Cov2")]

E = Phen.mtx$E

Geno.mtx = matrix(rbinom(N*nSNP,2,MAF),N,nSNP)

# NOTE: The row and column names of genotype matrix are required.
rownames(Geno.mtx) = paste0("IID-",1:N)
colnames(Geno.mtx) = paste0("SNP-",1:nSNP)


# Attach the survival package so that we can use its function Surv()
library(survival)

R = SPA_G_Get_Resid("survival",
                    Surv(surv.time,event)~Cov1+Cov2+E,
                    data=Phen.mtx,
                    pIDs=Phen.mtx$ID,
                    gIDs=paste0("IID-",1:N))
}
